# Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0

# Any publicly available image
image: public.ecr.aws/docker/library/python:3.13-bookworm

# Global timeout for all jobs
default:
  timeout: 2h

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
# variables:
#   PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

# https://pip.pypa.io/en/stable/topics/caching/
# cache:
#   paths:
#     - .cache/pip

stages:
  - developer_tests
  - deployment_validation
  - integration_tests

developer_tests:
  stage: developer_tests
  rules:
    - when: always  # Run on all branches
  
  before_script:
    - python --version
    - apt-get update -y
    - apt-get install make -y
    - pip install ruff
    # Install dependencies needed by publish.py for test imports
    - pip install typer rich boto3
    # Install test dependencies
    - cd lib/idp_common_pkg && pip install -e ".[test]" && cd ../..

  script:
    - make lint-cicd
    - make test-cicd -C lib/idp_common_pkg
  
  artifacts:
    paths:
      - lib/idp_common_pkg/test-reports/coverage.xml
      - lib/idp_common_pkg/test-reports/test-results.xml
    reports:
      coverage_report:
        coverage_format: cobertura
        path: lib/idp_common_pkg/test-reports/coverage.xml
      junit: lib/idp_common_pkg/test-reports/test-results.xml
    expire_in: 1 week

integration_tests:
  stage: integration_tests
  timeout: 2h
  # variables:
  #   # In order to run tests in another account, add a AWS_CREDS_TARGET_ROLE variable to the Gitlab pipeline variables.
  #   AWS_CREDS_TARGET_ROLE: ${AWS_CREDS_TARGET_ROLE}
  #   AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
  #   IDP_ACCOUNT_ID: ${IDP_ACCOUNT_ID}
  
 # Add rules to only run on develop branch
 # Add rules to only run on develop branch
  rules:
    - if: $CI_COMMIT_BRANCH == "develop"
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^feature\/.*/
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^fix\/.*/
      when: on_success
    - if: $CI_COMMIT_BRANCH =~ /^hotfix\/.*/
      when: manual
    - if: $CI_COMMIT_BRANCH =~ /^release\/.*/
      when: manual
    - when: manual

  before_script:
    - python --version
    - apt-get update -y
    - apt-get install zip unzip curl make -y
       
    # Install Poetry
    - curl -sSL https://install.python-poetry.org | python3 -
    - export PATH="/root/.local/bin:$PATH"
    - poetry --version

    # Install AWS CLI
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install

  script:
    - aws --version
    - aws sts get-caller-identity --no-cli-pager
    - cd ./scripts/sdlc/idp-cli
    - poetry install
    - make put
    - make wait

deployment_validation:
  stage: deployment_validation
  rules:
    - when: on_success

  before_script:
    - apt-get update -y
    - apt-get install curl unzip python3-pip -y
    # Install AWS CLI
    - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    - unzip awscliv2.zip
    - ./aws/install
    # Install PyYAML for template analysis
    - pip install PyYAML

  script:
    # Check if service role has sufficient permissions for main stack deployment
    - python3 scripts/validate_service_role_permissions.py
  
