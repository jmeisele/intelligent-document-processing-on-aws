{
    "StartAt": "OCRStep",
    "States": {
        "OCRStep": {
            "Type": "Task",
            "Resource": "${OCRFunctionArn}",
            "Parameters": {
                "execution_arn.$": "$$.Execution.Id",
                "document.$": "$.document"
            },
            "ResultPath": "$.OCRResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Sandbox.Timedout",
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 2,
                    "BackoffRate": 2
                }
            ],
            "Next": "ClassificationStep"
        },
        "ClassificationStep": {
            "Type": "Task",
            "Resource": "${ClassificationFunctionArn}",
            "Parameters": {
                "execution_arn.$": "$$.Execution.Id",
                "OCRResult.$": "$.OCRResult"
            },
            "ResultPath": "$.ClassificationResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Sandbox.Timedout",
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "ProcessSections"
        },
        "ProcessSections": {
            "Type": "Map",
            "ItemsPath": "$.ClassificationResult.document.sections",
            "ItemSelector": {
                "execution_arn.$": "$$.Execution.Id",
                "document.$": "$.ClassificationResult.document",
                "section_id.$": "$$.Map.Item.Value"
            },
            "MaxConcurrency": 10,
            "Iterator": {
                "StartAt": "ExtractionStep",
                "States": {
                    "ExtractionStep": {
                        "Type": "Task",
                        "Resource": "${ExtractionFunctionArn}",
                        "Retry": [
                            {
                                "ErrorEquals": [
                                    "Sandbox.Timedout",
                                    "Lambda.ServiceException",
                                    "Lambda.AWSLambdaException",
                                    "Lambda.SdkClientException",
                                    "Lambda.TooManyRequestsException",
                                    "ServiceQuotaExceededException",
                                    "ThrottlingException",
                                    "ProvisionedThroughputExceededException",
                                    "RequestLimitExceeded"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 10,
                                "BackoffRate": 2
                            }
                        ],
                        "Next": "AssessmentStep"
                    },
                    "AssessmentStep": {
                        "Type": "Task",
                        "Resource": "${AssessmentFunctionArn}",
                        "Parameters": {
                            "execution_arn.$": "$$.Execution.Id",
                            "document.$": "$.document",
                            "section_id.$": "$.section_id"
                        },
                        "ResultPath": "$",
                        "Retry": [
                            {
                                "ErrorEquals": [
                                    "Sandbox.Timedout",
                                    "Lambda.ServiceException",
                                    "Lambda.AWSLambdaException",
                                    "Lambda.SdkClientException",
                                    "Lambda.TooManyRequestsException",
                                    "ServiceQuotaExceededException",
                                    "ThrottlingException",
                                    "ProvisionedThroughputExceededException",
                                    "RequestLimitExceeded"
                                ],
                                "IntervalSeconds": 2,
                                "MaxAttempts": 10,
                                "BackoffRate": 2
                            }
                        ],
                        "Next": "SectionComplete"
                    },
                    "SectionComplete": {
                        "Type": "Pass",
                        "End": true
                    }
                }
            },
            "ResultPath": "$.ExtractionResults",
            "Next": "ProcessResultsStep"
        },
        "ProcessResultsStep": {
            "Type": "Task",
            "Resource": "${ProcessResultsLambdaArn}",
            "Parameters": {
                "execution_arn.$": "$$.Execution.Id",
                "ClassificationResult.$": "$.ClassificationResult",
                "ExtractionResults.$": "$.ExtractionResults"
            },
            "ResultPath": "$.Result",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Sandbox.Timedout",
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "CheckHITLRequired"
        },
        "CheckHITLRequired": {
            "Type": "Choice",
            "Choices": [
                {
                    "Variable": "$.Result.hitl_triggered",
                    "BooleanEquals": true,
                    "Next": "HITLReview"
                }
            ],
            "Default": "SummarizationStep"
        },
        "HITLReview": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke.waitForTaskToken",
            "Parameters": {
                "FunctionName": "${HITLWaitFunctionArn}",
                "Payload": {
                    "taskToken.$": "$$.Task.Token",
                    "Payload.$": "$"
                }
            },
            "ResultPath": "$.HITLWaitResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "HITLStatusUpdate"
        },
        "HITLStatusUpdate": {
            "Type": "Task",
            "Resource": "${HITLStatusUpdateFunctionArn}",
            "Parameters": {
                "Result.$": "$.Result",
                "HITLWaitResult.$": "$.HITLWaitResult"
            },
            "ResultPath": "$.HITLStatusResult",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Lambda.ServiceException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "SummarizationStep"
        },
        "SummarizationStep": {
            "Type": "Task",
            "Resource": "${SummarizationLambdaArn}",
            "Parameters": {
                "execution_arn.$": "$$.Execution.Id",
                "document.$": "$.Result.document"
            },
            "ResultPath": "$.Result",
            "OutputPath": "$.Result.document",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Sandbox.Timedout",
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "EvaluationStep"
        },
        "EvaluationStep": {
            "Type": "Task",
            "Resource": "${EvaluationLambdaArn}",
            "Parameters": {
                "execution_arn.$": "$$.Execution.Id",
                "document.$": "$"
            },
            "ResultPath": "$",
            "Retry": [
                {
                    "ErrorEquals": [
                        "Sandbox.Timedout",
                        "Lambda.ServiceException",
                        "Lambda.AWSLambdaException",
                        "Lambda.SdkClientException",
                        "Lambda.TooManyRequestsException",
                        "ServiceQuotaExceededException",
                        "ThrottlingException",
                        "ProvisionedThroughputExceededException",
                        "RequestLimitExceeded"
                    ],
                    "IntervalSeconds": 2,
                    "MaxAttempts": 10,
                    "BackoffRate": 2
                }
            ],
            "Next": "WorkflowComplete"
        },
        "WorkflowComplete": {
            "Type": "Pass",
            "End": true
        }
    }
}
